# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type TradeRequest {
  id: ID!
  title: String!
  content: String!
  majorCategoryId: Float!
  minorCategoryId: Float!
  makerId: Float!
  productId: Float!
  createdAt: DateTime!
  ownerId: String!
  count: Float!
  viewedTimes: Float!
  owner: User!
  majorCategory: MajorCategoryMst!
  minorCategory: MinorCategoryMst!
  maker: MakerMst!
  product: ProductMst!
  images: [TradeRequestImage!]!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type UserBadgeMst {
  id: ID!
  name: String!
  note: String
  content: String
}

type UserBadgeStatus {
  badgeId: Float!
  ownerId: String!
  gotAt: DateTime!
  isUsing: Float!
  badgeInfo: UserBadgeMst!
}

type User {
  id: ID!
  email: String!
  displayName: String!
  password: String!
  owner: [TradeRequest!]!
  usingBadges: [UserBadgeStatus!]!
}

type MajorCategoryMst {
  id: ID!
  name: String!
}

type MakerMst {
  id: ID!
  name: String!
  isVerificated: Float!
}

type MinorCategoryMst {
  id: Float!
  majorId: Float!
  name: String!
  majorCategory: MajorCategoryMst!
}

type TradeRequestImage {
  id: ID!
  url: String!
  title: String!
  content: String!
}

type ProductMst {
  makerId: Float!
  id: Float!
  name: String!
  isVerificated: Float!
  maker: MakerMst!
}

type Query {
  users: [User!]!
  getUserByEmail(email: String!): User!
  getUserById(id: String!): User!
  signInWithEmailAndPassword(credential: SignInInput!): User!
  getTradeRequests(limit: Float = 100, ownerId: String = ""): [TradeRequest!]!
  getTradeRequestById(id: Float!): TradeRequest!
  getAllMajorCategoryMsts: [MajorCategoryMst!]!
  getMinorCategoriesByMajorId(majorId: Float!): [MinorCategoryMst!]!
}

input SignInInput {
  email: String!
  password: String!
}

type Mutation {
  addUser(newUser: UserInput!): User!
  addNewTradeRequest(data: NewTradeRequestInput!): TradeRequest!
}

input UserInput {
  id: String!
  email: String!
  displayName: String!
  password: String!
}

input NewTradeRequestInput {
  title: String!
  content: String!
}

type Subscription {
  userAdded: User!
  newRequests: [TradeRequest!]!
}